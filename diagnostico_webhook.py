#!/usr/bin/env python3
"""
Script de diagn√≥stico para el webhook - Por qu√© muestra "Token de verificaci√≥n incorrecto"
"""
import requests

def explicar_webhook():
    print("üîç DIAGN√ìSTICO DEL WEBHOOK")
    print("="*60)
    print()
    
    print("‚ùì ¬øPor qu√© aparece 'Token de verificaci√≥n incorrecto'?")
    print("-"*50)
    print("‚úÖ Esto es NORMAL y CORRECTO!")
    print()
    print("üîß EXPLICACI√ìN T√âCNICA:")
    print("1. Cuando visitas /webhook desde el navegador:")
    print("   - El navegador hace una petici√≥n GET sin par√°metros")
    print("   - Tu app espera par√°metros espec√≠ficos de Twilio")
    print("   - Como no los encuentra, responde 'Token incorrecto'")
    print()
    print("2. Cuando Twilio env√≠a mensajes:")
    print("   - Twilio hace peticiones POST con datos espec√≠ficos")
    print("   - Tu app procesa el mensaje y responde correctamente")
    print()
    
    railway_url = "https://chatbot-production-ec53.up.railway.app"
    
    print("üß™ VAMOS A PROBAR LOS DIFERENTES CASOS:")
    print("="*60)
    
    # Caso 1: GET sin par√°metros (como el navegador)
    print("\n1Ô∏è‚É£ CASO 1: Visitando desde navegador (GET sin par√°metros)")
    try:
        response = requests.get(f"{railway_url}/webhook", timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   Respuesta: '{response.text}'")
        print("   ‚úÖ ESTO ES CORRECTO - debe decir 'Token de verificaci√≥n incorrecto'")
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
    
    # Caso 2: GET con par√°metros de verificaci√≥n (como Twilio para verificar)
    print("\n2Ô∏è‚É£ CASO 2: Verificaci√≥n de Twilio (GET con par√°metros)")
    try:
        params = {
            'hub.verify_token': 'panaderia_jos_mar_2025',
            'hub.challenge': 'test_challenge_12345'
        }
        response = requests.get(f"{railway_url}/webhook", params=params, timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   Respuesta: '{response.text}'")
        print("   ‚úÖ ESTO DEBE devolver el challenge (test_challenge_12345)")
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
    
    # Caso 3: POST con mensaje (como Twilio enviando mensajes)
    print("\n3Ô∏è‚É£ CASO 3: Mensaje de WhatsApp (POST con datos)")
    try:
        data = {
            'From': 'whatsapp:+51999999999',
            'Body': 'hola',
            'MessageSid': 'test_sid_diagnostico'
        }
        headers = {'Content-Type': 'application/x-www-form-urlencoded'}
        response = requests.post(f"{railway_url}/webhook", data=data, headers=headers, timeout=15)
        print(f"   Status: {response.status_code}")
        print(f"   Respuesta: {len(response.text)} caracteres")
        
        if '<Message>' in response.text:
            start = response.text.find('<Message>') + 9
            end = response.text.find('</Message>')
            if start > 8 and end > start:
                message = response.text[start:end]
                print(f"   üí¨ Mensaje del bot: {message[:100]}...")
                print("   ‚úÖ PERFECTO - el bot responde correctamente")
        
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
    
    print(f"\n{'='*60}")
    print("üìã RESUMEN:")
    print("‚úÖ Tu webhook est√° funcionando PERFECTAMENTE")
    print("‚úÖ El mensaje 'Token incorrecto' desde navegador es NORMAL")
    print("‚úÖ Twilio puede verificar y enviar mensajes correctamente")
    print(f"{'='*60}")
    
    print("\nüîß PR√ìXIMOS PASOS PARA SOLUCIONAR WHATSAPP:")
    print("1. Verifica que en Twilio Console tengas EXACTAMENTE:")
    print(f"   Webhook URL: {railway_url}/webhook")
    print("   HTTP Method: POST")
    print("2. Verifica que enviaste 'join helpful-spider' al n√∫mero correcto")
    print("3. Verifica que recibiste confirmaci√≥n de Twilio")
    print("4. Prueba enviar un mensaje simple como 'test'")

def verificar_configuracion_twilio():
    print("\nüîß CHECKLIST DE CONFIGURACI√ìN TWILIO:")
    print("="*50)
    
    checklist = [
        "‚òê Entr√© a https://console.twilio.com/",
        "‚òê Fui a Messaging ‚Üí Try it out ‚Üí Send a WhatsApp message", 
        "‚òê Puse la URL: https://chatbot-production-ec53.up.railway.app/webhook",
        "‚òê Seleccion√© HTTP Method: POST",
        "‚òê Guard√© la configuraci√≥n (Save Configuration)",
        "‚òê Agregu√© +1 415 523 8886 a mis contactos de WhatsApp",
        "‚òê Envi√© 'join helpful-spider' a ese n√∫mero",
        "‚òê Recib√≠ confirmaci√≥n de Twilio",
        "‚òê Intent√© enviar un mensaje de prueba"
    ]
    
    for item in checklist:
        print(f"   {item}")
    
    print("\n‚ùó IMPORTANTE:")
    print("- El sandbox de Twilio a veces tarda en activarse")
    print("- Aseg√∫rate de que tu n√∫mero est√© en formato internacional")
    print("- Algunos pa√≠ses tienen restricciones con el sandbox")
    
    print("\nüÜò SI SIGUE SIN FUNCIONAR:")
    print("1. Verifica los logs en Railway (puede haber errores)")
    print("2. Prueba con otro n√∫mero de tel√©fono")
    print("3. Verifica que tu cuenta de Twilio est√© activa")

if __name__ == "__main__":
    explicar_webhook()
    verificar_configuracion_twilio()
