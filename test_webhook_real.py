import requests
import json

# URL del webhook local
webhook_url = "http://localhost:5000/webhook"

def test_pedido_real_dialogflow():
    print("ü§ñ PROBANDO PEDIDO REAL A TRAV√âS DE DIALOGFLOW")
    print("=" * 60)
    
    # Datos que enviar√≠a Dialogflow para un pedido real
    dialogflow_request = {
        "queryResult": {
            "queryText": "Quiero 2 franc√©s, 1 torta de chocolate y 3 empanaditas de pollo",
            "intent": {
                "displayName": "realizar_pedido"
            },
            "parameters": {
                "productos": [
                    {
                        "cantidad": "2",
                        "nombre": "franc√©s"
                    },
                    {
                        "cantidad": "1", 
                        "nombre": "torta de chocolate"
                    },
                    {
                        "cantidad": "3",
                        "nombre": "empanaditas de pollo"
                    }
                ]
            }
        },
        "originalDetectIntentRequest": {
            "source": "whatsapp",
            "payload": {
                "from": "+51987654321"
            }
        }
    }
    
    print("üì§ Enviando pedido al webhook...")
    print(f"üì± Cliente: +51987654321")
    print(f"üõí Productos: 2x franc√©s, 1x torta de chocolate, 3x empanaditas de pollo")
    
    try:
        # Enviar request al webhook
        response = requests.post(
            webhook_url,
            json=dialogflow_request,
            headers={'Content-Type': 'application/json'},
            timeout=30
        )
        
        print(f"\nüì• RESPUESTA DEL WEBHOOK:")
        print(f"   üîó Status Code: {response.status_code}")
        
        if response.status_code == 200:
            response_data = response.json()
            print(f"   ‚úÖ Respuesta exitosa")
            print(f"   ü§ñ Mensaje: {response_data.get('fulfillmentText', 'Sin mensaje')}")
        else:
            print(f"   ‚ùå Error en el servidor")
            print(f"   üìù Respuesta: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå No se pudo conectar al webhook. ¬øEst√° el servidor corriendo?")
        print("üí° Para iniciar el servidor: python app.py")
    except Exception as e:
        print(f"‚ùå Error: {e}")

def test_consulta_precios():
    print("\nüí∞ PROBANDO CONSULTA DE PRECIOS")
    print("=" * 40)
    
    dialogflow_request = {
        "queryResult": {
            "queryText": "¬øCu√°nto cuesta el franc√©s y la torta de chocolate?",
            "intent": {
                "displayName": "consultar_precios"
            },
            "parameters": {
                "productos": ["franc√©s", "torta de chocolate"]
            }
        },
        "originalDetectIntentRequest": {
            "source": "whatsapp",
            "payload": {
                "from": "+51987654321"
            }
        }
    }
    
    try:
        response = requests.post(
            webhook_url,
            json=dialogflow_request,
            headers={'Content-Type': 'application/json'},
            timeout=30
        )
        
        print(f"üì• Status: {response.status_code}")
        if response.status_code == 200:
            response_data = response.json()
            print(f"ü§ñ Respuesta: {response_data.get('fulfillmentText', 'Sin mensaje')}")
        else:
            print(f"‚ùå Error: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå Servidor no disponible")
    except Exception as e:
        print(f"‚ùå Error: {e}")

if __name__ == "__main__":
    print("üöÄ INICIANDO PRUEBAS DEL WEBHOOK CON PRODUCTOS REALES")
    print("=" * 70)
    
    # Probar pedido real
    test_pedido_real_dialogflow()
    
    # Probar consulta de precios
    test_consulta_precios()
    
    print(f"\n‚úÖ PRUEBAS COMPLETADAS")
    print(f"üí° Aseg√∫rate de que el servidor est√© corriendo con: python app.py")
